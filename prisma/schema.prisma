// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  linkedInId   String   @unique

  name         String?
  email        String?  @unique //for admin
  password     String?          //for admin

  role         Role     @default(STUDENT)

  studentProfile StudentProfile?
  expertProfile  ExpertProfile?
  ucode          Ucode[]

  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Ucode {
  id           String    @id @default(cuid())
  accessToken  String?   //Linkedin access token
  refreshToken String?   //Linkedin refresh token

  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  userId       String    @unique
  user         User      @relation(fields: [userId], references: [id])
}

model StudentProfile {
  id           String    @id @default(cuid())

  profession   String?
  organization String?
  location     String?
  description  String?

  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id])
}

model ExpertProfile {
  id            String   @id @default(cuid())
 
  profession    String?
  organization  String?
  location      String?
  description   String?
  experience    String?
  hourlyRate    String?
  skills        String[]
  availableDays String[]
  availableTime String[]

  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id])
}

enum Role {
  STUDENT
  EXPART
  ADMIN
}
